version: '3.8'

services:
  codesession:
    image: ghcr.io/trustmedis/discord-opencode:latest
    container_name: codesession-prod
    restart: always
    volumes:
      # Persistent storage for sessions and worktrees
      - sessions_data:/app/.sessions
      - worktrees_data:/app/.worktrees
      # Configuration file - ensure config.toml exists with bot token and settings
      - ./config.toml:/app/config.toml:ro
    networks:
      - codesession-net
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Production backup service
  backup:
    image: alpine:latest
    container_name: codesession-backup-prod
    restart: "no"
    volumes:
      - sessions_data:/backup/sessions:ro
      - worktrees_data:/backup/worktrees:ro
      - ${BACKUP_PATH:-./backups}:/output
    environment:
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    command: |
      sh -c "
        # Create backup
        echo 'Creating production backup...'
        TIMESTAMP=$$(date +%Y%m%d-%H%M%S)
        tar czf /output/codesession-backup-$${TIMESTAMP}.tar.gz -C /backup .
        
        # Clean old backups (keep last 30 days by default)
        echo 'Cleaning old backups...'
        find /output -name 'codesession-backup-*.tar.gz' -mtime +$${BACKUP_RETENTION_DAYS:-30} -delete
        
        echo 'Backup completed: codesession-backup-'$${TIMESTAMP}'.tar.gz'
      "

networks:
  codesession-net:
    driver: bridge

volumes:
  sessions_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${SESSIONS_DATA_PATH:-./prod-data/sessions}
  worktrees_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WORKTREES_DATA_PATH:-./prod-data/worktrees}